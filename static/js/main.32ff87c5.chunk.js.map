{"version":3,"sources":["components/Textarea.jsx","components/Button.jsx","digit.js","components/rows/Row.jsx","components/App.jsx","index.js"],"names":["Textarea","props","className","class","placeholder","numberToShow","Button","onClick","clicked","value","allRows","Row","digitOne","map","row","index","firstNumber","secondNumber","arithmetic","digitTwo","App","React","useState","screenNumber","setScreenNuber","operate","firstDigit","secondDigit","operater","result","parseFloat","console","log","toString","split","arrayToString","numberArray","outcome","includes","replace","undefined","length","push","prevalue","i","splice","pop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32ff87c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Textarea(props) {\r\n    return (\r\n        <div>\r\n            <input className={props.class} placeholder={props.numberToShow} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Textarea;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button\r\n            onClick={() => {props.clicked(props.value)}}\r\n            value=\"{props.value}\"\r\n            className=\"btn cal-btn\">\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Button;","const allRows = [\r\n\r\n    {value: \"AC\"},{value: \"xÂ²\"},{value: \"cross\"},{value: \"/\"},\r\n    {value: 7},{value: 8},{value: 9},{value: \"*\"},\r\n    {value: 4},{value: 5},{value: 6},{value: \"+\"},\r\n    {value: 1},{value: 2},{value: 3},{value: \"-\"},\r\n    {value: \"+/-\"},{value: 0},{value: \".\"},{value: \"=\"}\r\n\r\n\r\n];\r\n\r\nexport  default allRows;    \r\n","import React from 'react';\r\nimport Button from \"../Button\";\r\nimport allRows from \"../../digit\";\r\n\r\nfunction Row(props) {\r\n    return (\r\n\r\n        <div className=\"row \">\r\n            {allRows.map((row, index) => {\r\n                return (\r\n                    <div className=\"col-3 cal-row\" key={index}>\r\n                        <Button clicked={props.clicked} value={row.value} />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Row;","import React from 'react';\r\nimport Textarea from \"./Textarea\";\r\nimport Row from \"./rows/Row\";\r\n\r\n\r\nvar firstNumber = [];\r\nvar secondNumber = [];\r\n\r\nvar arithmetic = [];\r\n\r\nvar digitOne;\r\nvar digitTwo = null;\r\n\r\n\r\n\r\nfunction App() {\r\n    var [screenNumber, setScreenNuber] = React.useState(\"\");\r\n\r\n\r\n    // Function for operation - + / *\r\n    function operate(firstDigit, secondDigit, operater) {\r\n\r\n        firstDigit = parseFloat(firstDigit);\r\n        secondDigit = parseFloat(secondDigit);\r\n        console.log(operater, firstDigit, secondDigit);\r\n        var result;\r\n        switch (operater) {\r\n            case \"+\":\r\n\r\n                result = (firstDigit + secondDigit);\r\n                break;\r\n            case \"*\":\r\n                result = (firstDigit * secondDigit);\r\n                break;\r\n            case \"/\":\r\n                result = firstDigit / secondDigit;\r\n                break;\r\n            case \"-\":\r\n                result = firstDigit - secondDigit;\r\n                break;\r\n            default:\r\n                return \"karan\";\r\n            //dndonol\r\n        }\r\n\r\n        digitOne = result;\r\n        firstNumber = result.toString().split(\"\");\r\n        secondNumber = [];\r\n        digitTwo = null;\r\n        console.log(result);\r\n        setScreenNuber(() => { return result });\r\n        return result;\r\n\r\n    }\r\n\r\n    //Function for changing array to string and than number\r\n    function arrayToString(numberArray) {\r\n        console.log(numberArray);\r\n        if (numberArray.includes(\"-\") === true) {\r\n            var outcome = numberArray.toString();\r\n\r\n            outcome = outcome.replace(/,/g, \"\");\r\n\r\n            outcome = parseFloat(outcome);\r\n\r\n            digitOne === undefined || null ? digitOne = \"-\" + outcome : digitTwo = \"-\" + outcome;\r\n            \r\n        } else {\r\n            var outcome = numberArray.toString();\r\n\r\n            outcome = outcome.replace(/,/g, \"\");\r\n\r\n            outcome = parseFloat(outcome);\r\n\r\n            digitOne === undefined || null ? digitOne = outcome : digitTwo = outcome;\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    // function for when button is pressed\r\n    function calculate(value) {\r\n        if (typeof value === 'number') {\r\n\r\n            if (arithmetic.length === 0) {\r\n                firstNumber.push(value);\r\n                setScreenNuber(() => { return firstNumber.toString().replace(/,/g, \"\") });\r\n            } else {\r\n                secondNumber.push(value);\r\n                setScreenNuber(() => { return secondNumber.toString().replace(/,/g, \"\") });\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            if (value === \"*\" || value === \"/\" || value === \"-\" || value === \"+\") {\r\n                arithmetic.push(value);\r\n\r\n\r\n\r\n                setScreenNuber((prevalue) => { return arithmetic[arithmetic.length - 1] });\r\n                if (digitOne === undefined) {\r\n\r\n\r\n                    arrayToString(firstNumber);\r\n                    \r\n                } else if (digitTwo === null) {\r\n                    if (secondNumber.length === 0) {\r\n\r\n                    } else {\r\n                        arrayToString(secondNumber);\r\n\r\n                        operate(digitOne, digitTwo, arithmetic[arithmetic.length - 2]);\r\n                    }\r\n\r\n                } else {\r\n\r\n                }\r\n            } else {\r\n\r\n            }\r\n\r\n\r\n            switch (value) {\r\n                case (\"=\"):\r\n                    if (secondNumber.length === 0) {\r\n\r\n                    } else {\r\n                        arrayToString(secondNumber);\r\n\r\n                        operate(digitOne, digitTwo, arithmetic[arithmetic.length - 1]);\r\n                    }\r\n\r\n\r\n                    break;\r\n                case (\"AC\"):\r\n                    digitTwo = null;\r\n                    digitOne = undefined;\r\n                    arithmetic = [];\r\n                    firstNumber = [];\r\n                    secondNumber = [];\r\n                    setScreenNuber(() => { return \"0\" });\r\n                    break;\r\n                case (\"xÂ²\"):\r\n                    setScreenNuber((prevalue) => {\r\n                        console.log(prevalue);\r\n                        return (prevalue * prevalue);\r\n                    });\r\n                    break;\r\n                case (\"+/-\"):\r\n                    setScreenNuber(prevalue => {\r\n                        if (prevalue > 0) {\r\n                            if (secondNumber.length === 0) {\r\n                                firstNumber.push(\"-\");\r\n                                console.log(digitOne);\r\n                                digitOne = arrayToString(firstNumber);\r\n                                console.log(digitOne);\r\n                                return \"-\" + prevalue;\r\n                            } else if (firstNumber.length === 0) {\r\n\r\n                            } else {\r\n                                secondNumber.push(\"-\");\r\n                                digitOne = arrayToString(firstNumber);\r\n                                return \"-\" + prevalue;\r\n                            }\r\n                        } else if (prevalue === 0) {\r\n\r\n                        } else if (prevalue < 0) {\r\n                            if (secondNumber.length === 0) {\r\n                                var x = \"-\";\r\n                                console.log(firstNumber);\r\n                                for (var i = 0; i < firstNumber.length; i++) {\r\n\r\n                                    if (firstNumber[i] === \"-\") {\r\n\r\n                                        firstNumber.splice(i, 1);\r\n                                    }\r\n\r\n                                }\r\n                                console.log(firstNumber);\r\n                                digitOne = firstNumber.toString().replace(/,/g, \"\");\r\n                                return firstNumber.toString().replace(/,/g, \"\");\r\n                            } else if (firstNumber.length === 0) {\r\n\r\n                            } else {\r\n                                var x = \"-\";\r\n\r\n                                for (var i = 0; i < secondNumber.length; i++) {\r\n\r\n                                    if (screenNumber[i] === \"-\") {\r\n\r\n                                        screenNumber.splice(i, 1);\r\n                                    }\r\n\r\n                                }\r\n                                digitOne = firstNumber.toString().replace(/,/g, \"\");\r\n                                return secondNumber.toString().replace(/,/g, \"\");\r\n                            }\r\n                        }\r\n                    })\r\n                    break;\r\n                case (\".\"):\r\n                    if (secondNumber.length === 0) {\r\n                        firstNumber.push(value);\r\n                        setScreenNuber(() => { return firstNumber.toString().replace(/,/g, \"\") });\r\n                    } else if (firstNumber.length === 0) {\r\n\r\n                    } else {\r\n                        secondNumber.push(value);\r\n                        \r\n                        setScreenNuber(() => { return secondNumber.toString().replace(/,/g, \"\") });\r\n                    }\r\n                    break;\r\n                case (\"cross\"):\r\n                    if (secondNumber.length === 0) {\r\n                        firstNumber.pop();\r\n                        setScreenNuber(() => { return firstNumber.toString().replace(/,/g, \"\") });\r\n                    } else if (firstNumber.length === 0) {\r\n\r\n                    } else {\r\n                        secondNumber.pop();\r\n                        setScreenNuber(() => { return secondNumber.toString().replace(/,/g, \"\") });\r\n                    }\r\n                    break;\r\n                default:\r\n                // code block\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 hide\">1</div>\r\n\r\n                <div className=\"col-12 col-md-6 calculater\">\r\n\r\n                    <Textarea class=\"display-area\" numberToShow={screenNumber} />\r\n\r\n\r\n                    <div className=\"container-fluid \">\r\n                        <Row clicked={calculate} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-3 hide\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}